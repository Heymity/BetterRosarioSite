console.log("Better Rosario");

generateBtns();

var observeDOM = (function(){
  var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;

  return function( obj, callback ){
    if( !obj || obj.nodeType !== 1 ) return; 

    if( MutationObserver ){
      // define a new observer
      var mutationObserver = new MutationObserver(callback)

      // have the observer observe foo for changes in children
      mutationObserver.observe( obj, { childList:true, subtree:true })
      return mutationObserver
    }
    
    // browser support fallback
    else if( window.addEventListener ){
      obj.addEventListener('DOMNodeInserted', callback, false)
      obj.addEventListener('DOMNodeRemoved', callback, false)
    }
  }
})()


function generateBtns() {
  var btns = document.getElementsByClassName("autoGeneratedBetterRosarioBtn");
    while (btns.length > 0) {
      btns[0].parentNode.removeChild(btns[0]);
    }

  setTimeout(() => {
    // get all elements with class autoGeneratedBetterRosarioBtn and remove them from the DOM
    var btns = document.getElementsByClassName("autoGeneratedBetterRosarioBtn");
    while (btns.length > 0) {
      btns[0].parentNode.removeChild(btns[0]);
    }
    
    let agendaUl = document.getElementsByClassName("lst_agendas")[0];
    let agendaLi = agendaUl.getElementsByTagName("li");

    // Set the innerHTML of each li in agendaLi
    for (let i = 0; i < agendaLi.length; i++) {
      
      let input = document.createElement("input");
      input.setAttribute("type", "button");
      input.setAttribute("class", "autoGeneratedBetterRosarioBtn");
      input.setAttribute("value", "Finalizar");
      input.setAttribute("style", `position: absolute; top: ${100 + i * 69}px; right: 280px;`);

      var hddAgenda = agendaLi[i].id.split("_")[1];
      input.innerHTML = hddAgenda;

      input.addEventListener("click", (inputElement) => {
        console.log("clicked", inputElement.target.innerHTML);
        console.log("inputElement", inputElement);
        document.getElementById("hddAgenda").value = inputElement.target.innerHTML;

        let btnFinalizar = document.getElementById("btnFinalizar");
        btnFinalizar.click();
        
        observeDOM(document.getElementsByClassName("agendas")[0], () => {
          generateBtns();
        });
      });
      agendaUl.appendChild(input);
    }

    var lis = document.getElementsByTagName("li");
    var btnVoltar = document.getElementById("btnVoltar");
    var btnFinalizar = document.getElementById("btnFinalizar");

    for (let i = 0; i < lis.length; i++) {
      lis[i].addEventListener("click", function() {
        console.log("generating btns");
        generateBtns();
      });
    }
    
    btnVoltar.addEventListener("click", function() {
      console.log("generating btns");
      generateBtns();
    });

    btnFinalizar.addEventListener("click", function() {
      console.log("generating btns");
      generateBtns();
    }, 2000);
  });
}